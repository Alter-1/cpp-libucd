.TH ucd_parse 3 2015-01-12 "libucd Manuals"
.\" Process with
.\" nroff -man ucd_parse.3
.\" 2015-01-12 Yunhui Fu <https://github.com/yhfudev>

.SH NAME
ucd_parse \- feed text data to the dector

.SH SNOPSYS
.B "#include <libucd.h>"
.sp
.BI "int ucd_parse (ucd_t *det, const char * buff, size_t size);"

.SH DESCRIPTION
feed text data to the dector

The
.B det
variable is must initialized by
.BI ucd_init
API before calling this detect api.

.SH "RETURN VALUES"
Returns following condition as case by case.

.TP
.B UCD_RESULT_OK
.br
Detecting success

.TP
.B UCD_RESULT_INVALID_DETECTOR
.br
det was invalid.

.TP
.B UCD_RESULT_NOMEMORY
.br
Occuring
.B "out of memory"
at internal API

.SH EXAMPLE
.nf
#include <stdio.h>
#include <string.h>

#include <libucd.h>

int main (void) {
    int ret;
    ucd_t det;
    char buffer[100] = "test data";

    if ( ucd_init (&det) < 0 ) {
        fprintf (stderr, "libucd initialize failed\\n");
        return -1;
    }

    ret = ucd_parse (&det, buffer, strlen(buffer));
    switch (ret) {
    case UCD_RESULT_NOMEMORY :
        fprintf (stderr, "On handle processing, occured out of memory\\n");
        break;
    case UCD_RESULT_INVALID_DETECTOR :
        fprintf (stderr, "error in parsing\\n");
        break;
    default:
        break;
    }
    memset (buffer, 0, sizeof(buffer));
    if (ret >= 0) {
        ucd_end (&det);
        ucd_results (&det, buffer, sizeof(buffer));
    }
    ucd_clear (&det);

    printf ("encoding: %s\\n", buffer);

    return 0;
}
.fi

.SH AUTHORS
Yunhui Fu <https://github.com/yhfudev>

.SH "BUG REPORTS"
Use QnA board on https://github.com/yhfudev

.SH "SEE ALSO"
ucd_init(3), ucd_end(3), ucd_results(3), ucd_clear(3)
